[
    {
        "problem_id": "p02829",
        "question": "Score: 100 points\n\nProblem Statement\nTakahashi is solving quizzes. He has easily solved all but the last one.\nThe last quiz has three choices: 1, 2, and 3.\nWith his supernatural power, Takahashi has found out that the choices A and B are both wrong.\nPrint the correct choice for this problem.\n\nConstraints\n\nEach of the numbers A and B is 1, 2, or 3.\nA and B are different.\n\nInput\nInput is given from Standard Input in the following format:\nA\nB\n\nOutput\nPrint the correct choice.\n\nSample Input 13\n1\n\nSample Output 12\n\nWhen we know 3 and 1 are both wrong, the correct choice is 2.\n\nSample Input 21\n2\n\nSample Output 23",
        "desc": "This problem requires identifying the remaining correct choice from three options after two incorrect ones are provided, testing basic input handling and conditional logic in Java. It is classified as an easy-level programming challenge.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n      \tint A = sc.nextInt();\n      \tint B = sc.nextInt();\n      \tSystem.out.println(6-A-B);\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02801",
        "question": "Score : 100 points\n\nProblem StatementGiven is a lowercase English letter C that is not z. Print the letter that follows C in alphabetical order.\n\nConstraints\nC is a lowercase English letter that is not z.\n\nInputInput is given from Standard Input in the following format:\nC\n\nOutputPrint the letter that follows C in alphabetical order.\n\nSample Input 1a\n\nSample Output 1b\n\na is followed by b.\n\nSample Input 2y\n\nSample Output 2z\n\ny is followed by z.",
        "desc": "This Java problem tests understanding of character manipulation and ASCII value operations by requiring the programmer to identify and print the next lowercase English letter following a given input character. It is classified as an easy-level question.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tchar c = sc.next().charAt(0);\n      \tSystem.out.println(String.valueOf((char)(c+1)));\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02783",
        "question": "Score : 100 points\n\nProblem StatementServal is fighting with a monster.\nThe health of the monster is H.\nIn one attack, Serval can decrease the monster's health by A.\nThere is no other way to decrease the monster's health.\nServal wins when the monster's health becomes 0 or below.\nFind the number of attacks Serval needs to make before winning.\n\nConstraints\n1 \\leq H \\leq 10^4\n1 \\leq A \\leq 10^4\nAll values in input are integers.\n\nInputInput is given from Standard Input in the following format:\nH A\n\nOutputPrint the number of attacks Serval needs to make before winning.\n\nSample Input 110 4\n\nSample Output 13\n\nAfter one attack, the monster's health will be 6.\nAfter two attacks, the monster's health will be 2.\nAfter three attacks, the monster's health will be -2.\n\nThus, Serval needs to make three attacks to win.\n\nSample Input 21 10000\n\nSample Output 21\n\nSample Input 310000 1\n\nSample Output 310000",
        "desc": "This Java problem assesses the ability to perform integer arithmetic and implement ceiling division to determine the minimum number of attacks needed to reduce a monster's health to zero or below. It is classified as an easy-level problem, suitable for beginners practicing basic control structures and mathematical operations.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tint H = sc.nextInt();\n      \tint A = sc.nextInt();\n      \tif(H%A ==0) System.out.println(H/A);\n      \telse System.out.println((H/A)+1);\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02777",
        "question": "Score : 100 points\n\nProblem Statement\nWe have A balls with the string S written on each of them and B balls with the string T written on each of them.\nFrom these balls, Takahashi chooses one with the string U written on it and throws it away.\nFind the number of balls with the string S and balls with the string T that we have now.\n\nConstraints\n\nS, T, and U are strings consisting of lowercase English letters.\nThe lengths of S and T are each between 1 and 10 (inclusive).\nS \\not= T\nS=U or T=U.\n1 \\leq A,B \\leq 10\nA and B are integers.\n\nInput\nInput is given from Standard Input in the following format:\nS T\nA B\nU\n\nOutput\nPrint the answer, with space in between.\n\nSample Input 1red blue\n3 4\nred\n\nSample Output 12 4\n\nTakahashi chose a ball with red written on it and threw it away.\nNow we have two balls with the string S and four balls with the string T.\n\nSample Input 2red blue\n5 5\nblue\n\nSample Output 25 4\n\nTakahashi chose a ball with blue written on it and threw it away.\nNow we have five balls with the string S and four balls with the string T.",
        "desc": "This Java problem assesses understanding of string handling, conditional logic, and basic arithmetic operations. It is categorized as an easy-level challenge, requiring students to manipulate counts based on string comparisons and output the updated values accordingly.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tString S = sc.next();\n      \tString T = sc.next();\n      \tint A = sc.nextInt();\n      \tint B = sc.nextInt();\n      \tString U = sc.next();\n      \tif(U.equals(S)) A--;\n      \telse B--;\n      \tSystem.out.println(A + \" \" + B);\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02771",
        "question": "Score: 100 points\n\nProblem Statement\nA triple of numbers is said to be poor when two of those numbers are equal but the other number is different from those two numbers.\nYou will be given three integers A, B, and C. If this triple is poor, print Yes; otherwise, print No.\n\nConstraints\n\nA, B, and C are all integers between 1 and 9 (inclusive).\n\nInput\nInput is given from Standard Input in the following format:\nA B C\n\nOutput\nIf the given triple is poor, print Yes; otherwise, print No.\n\nSample Input 15 7 5\n\nSample Output 1Yes\n\nA and C are equal, but B is different from those two numbers, so this triple is poor.\n\nSample Input 24 4 4\n\nSample Output 2No\n\nA, B, and C are all equal, so this triple is not poor.\n\nSample Input 34 9 6\n\nSample Output 3No\n\nSample Input 43 3 4\n\nSample Output 4Yes",
        "desc": "This Java problem requires determining if exactly two out of three given integers are equal while the third is different, testing the programmerâ€™s ability to use conditional statements and equality checks. It is classified as an easy-level exercise suitable for beginners.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tint A = sc.nextInt();\n      \tint B = sc.nextInt();\n      \tint C = sc.nextInt();\n      \tif((A==B&&B!=C) || (B==C&&C!=A) || (C==A&&A!=B)) System.out.println(\"Yes\");\n      \telse System.out.println(\"No\");\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02612",
        "question": "Score : 100 points\n\nProblem StatementWe will buy a product for N yen (the currency of Japan) at a shop.\nIf we use only 1000-yen bills to pay the price, how much change will we receive?\nAssume we use the minimum number of bills required.\n\nConstraints\n1 \\leq N \\leq 10000\nN is an integer.\n\nInputInput is given from Standard Input in the following format:\nN\n\nOutputPrint the amount of change as an integer.\n\nSample Input 11900\n\nSample Output 1100\n\nWe will use two 1000-yen bills to pay the price and receive 100 yen in change.\n\nSample Input 23000\n\nSample Output 20\n\nWe can pay the exact price.",
        "desc": "This Java problem evaluates the ability to perform integer division and modulo operations to determine change when using the minimum number of 1000-yen bills. It is considered an easy-level exercise, suitable for beginners practicing basic arithmetic and input/output handling in programming.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tint n = sc.nextInt();\n      \tSystem.out.println((1000 - n % 1000) % 1000 );\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02621",
        "question": "Score : 100 points\n\nProblem StatementGiven an integer a as input, print the value a + a^2 + a^3.\n\nConstraints\n1 \\leq a \\leq 10\na is an integer.\n\nInputInput is given from Standard Input in the following format:\na\n\nOutputPrint the value a + a^2 + a^3 as an integer.\n\nSample Input 12\n\nSample Output 114\n\nWhen a = 2, we have a + a^2 + a^3 = 2 + 2^2 + 2^3 = 2 + 4 + 8 = 14.\nPrint the answer as an input. Outputs such as 14.0 will be judged as incorrect.\n\nSample Input 210\n\nSample Output 21110",
        "desc": "This problem assesses fundamental Java programming skills, including reading integer input, performing arithmetic operations (specifically exponentiation and summation), and producing the correct integer output. It is classified as an easy-level question.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tint a = sc.nextInt();\n      \tSystem.out.println(a+(a*a)+(a*a*a));\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02627",
        "question": "Score : 100 points\n\nProblem StatementAn uppercase or lowercase English letter \\alpha will be given as input.\nIf \\alpha is uppercase, print A; if it is lowercase, print a.\n\nConstraints\n\\alpha is an uppercase (A - Z) or lowercase (a - z) English letter.\n\nInputInput is given from Standard Input in the following format:\nÎ±\n\nOutputIf \\alpha is uppercase, print A; if it is lowercase, print a.\n\nSample Input 1B\n\nSample Output 1A\n\nB is uppercase, so we should print A.\n\nSample Input 2a\n\nSample Output 2a\n\na is lowercase, so we should print a.",
        "desc": "This Java problem evaluates the ability to handle character input, determine whether a letter is uppercase or lowercase, and apply conditional logic to produce the corresponding output. It is classified as an easy-level question, making it suitable for beginners practicing basic control structures and character manipulation.",
        "program": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n      \tchar a = sc.next().charAt(0);\n      \tif('a'<= a && 'z' >= a) System.out.println(\"a\");\n      \telse System.out.println(\"A\");\n    }\n}",
        "error_desc": "No error."
    },
    {
        "problem_id": "p02759",
        "question": "Score : 100 points\n\nProblem StatementTakahashi wants to print a document with N pages double-sided, where two pages of data can be printed on one sheet of paper.\nAt least how many sheets of paper does he need?\n\nConstraints\nN is an integer.\n1 \\leq N \\leq 100\n\nInputInput is given from Standard Input in the following format:\nN\n\nOutputPrint the answer.\n\nSample Input 15\n\nSample Output 13\n\nBy printing the 1-st, 2-nd pages on the 1-st sheet, 3-rd and 4-th pages on the 2-nd sheet, and 5-th page on the 3-rd sheet, we can print all the data on 3 sheets of paper.\n\nSample Input 22\n\nSample Output 21\n\nSample Input 3100\n\nSample Output 350",
        "desc": "This Java problem requires determining the minimum number of double-sided sheets needed to print a document withâ€¯Nâ€¯pages, testing concepts such as integer division and ceiling operations. It is classified as an easy-level programming challenge.",
        "program": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n      \tint N=sc.nextInt();\n      \tif(N%2=0){\n         System.out.print(N/2);\n      }else{\n         System.out.print((N/2)+1);\n      }\n   }\n}",
        "error_desc": "1. The if condition uses the assignment operator `=` instead of the comparison operator `==`.\n2. Attempting to assign `0` to `N%2` in the condition `N%2=0` causes a syntax error.\n3. The program does not account for edge cases where `N` is an odd number beyond simple division."
    },
    {
        "problem_id": "p02753",
        "question": "Score : 100 points\n\nProblem StatementIn AtCoder City, there are three stations numbered 1, 2, and 3.\nEach of these stations is operated by one of the two railway companies, A and B. A string S of length 3 represents which company operates each station. If S_i is A, Company A operates Station i; if S_i is B, Company B operates Station i.\nTo improve the transportation condition, for each pair of a station operated by Company A and one operated by Company B, there will be a bus service connecting them.\nDetermine if there is a pair of stations that will be connected by a bus service.\n\nConstraints\nEach character of S is A or B.\n|S| = 3\n\nInputInput is given from Standard Input in the following format:\nS\n\nOutputIf there is a pair of stations that will be connected by a bus service, print Yes; otherwise, print No.\n\nSample Input 1ABA\n\nSample Output 1Yes\n\nCompany A operates Station 1 and 3, while Company B operates Station 2.\nThere will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\n\nSample Input 2BBA\n\nSample Output 2Yes\n\nCompany B operates Station 1 and 2, while Company A operates Station 3.\nThere will be a bus service between Station 1 and 3, and between Station 2 and 3, so print Yes.\n\nSample Input 3BBB\n\nSample Output 3No\n\nCompany B operates all the stations. Thus, there will be no bus service, so print No.",
        "desc": "This Java problem evaluates proficiency in string manipulation and conditional logic by requiring the identification of pairs of railway stations operated by different companies based on a three-character input string. It is considered an easy-level task, suitable for beginners aiming to demonstrate fundamental programming skills.",
        "program": "import java.util.Scanner;\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        if(s.equals(\"AAA\") || s.equals(\"BBB\")){\n            System.out.println(\"No\");\n        }else{\n            System.out.println(\"Yes\");\n        }\n    }",
        "error_desc": "1. The main method parameter is defined as `String args[]` instead of `String[] args`.\n2. There might be missing closing braces causing a syntax error.\n3. Ensure the class name is exactly `Main` with an uppercase 'M' as required by the judge."
    }
]